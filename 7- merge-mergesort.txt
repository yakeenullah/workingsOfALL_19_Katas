1. Run git branch to see the two branches present
$ git branch
  Mergesort-Impl
* master

2. Merge Mergesort-Impl into master
$ git merge Mergesort-Impl
Auto-merging mergesort.py
CONFLICT (content): Merge conflict in mergesort.py
Automatic merge failed; fix conflicts and then commit the result.

3. Either:
Solve the merge conflict with your favorite editor and finish the merge (git status will tell you what to do), or
Use git mergetool --tool=emerge (for emacs fans) or git mergetool --tool=vimdiff (for vim fans) and finish the
 merge (git status will tell you what to do)

$ git mergetool --tool=emerge
Merging:
mergesort.py

Normal merge conflict for 'mergesort.py':
  {local}: modified file
  {remote}: modified file
The merge tool emerge is not available as 'emacs'

$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   mergesort.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        mergesort_BACKUP_5417.py
        mergesort_BASE_5417.py
        mergesort_LOCAL_5417.py
        mergesort_REMOTE_5417.py

no changes added to commit (use "git add" and/or "git commit -a")


$ git merge --abort


$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        mergesort_BACKUP_5417.py
        mergesort_BASE_5417.py
        mergesort_LOCAL_5417.py
        mergesort_REMOTE_5417.py

nothing added to commit but untracked files present (use "git add" to track)



$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   mergesort_BACKUP_5417.py
        new file:   mergesort_BASE_5417.py
        new file:   mergesort_LOCAL_5417.py
        new file:   mergesort_REMOTE_5417.py

